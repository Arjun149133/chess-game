// schema.prisma
generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["driverAdapters"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model User {
    id          String    @id @default(uuid())
    username    String    @unique
    email       String
    provider    Provider  @default(Guest)
    gameAsWhite Game[]    @relation("GameAsWhite")
    gameAsBlack Game[]    @relation("GameAsBlack")
    rating      Int       @default(1200)
    createdAt   DateTime  @default(now())
    lastLogin   DateTime?
    password    String?
    picture     String?

    @@index([rating])
}

model Game {
    id            String      @id @default(uuid())
    whitePlayerId String
    blackPlayerId String
    status        GameStatus
    result        GameResult?
    timeControl   TimeControl
    startingFen   String      @default("rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1")
    currentFen    String?
    startAt       DateTime    @default(now())
    endAt         DateTime?
    moves         Move[]

    whitePlayer User @relation("GameAsWhite", fields: [whitePlayerId], references: [id])
    blackPlayer User @relation("GameAsBlack", fields: [blackPlayerId], references: [id])
}

//TODO: make move better
model Move {
    id         String   @id @default(uuid())
    gameId     String
    game       Game     @relation(fields: [gameId], references: [id])
    moveNumber Int
    from       String
    to         String
    comment    String?
    // before     String
    // after      String
    timeTaken  Int?     @default(0)
    createdAt  DateTime @default(now())
    // san        String?

    @@index([gameId])
}

enum Provider {
    Google
    Password
    Guest
}

enum GameStatus {
    IN_PROGRESS
    COMPLETED
    ABANDONED
    TIME_UP
    PLAYER_EXIT
}

enum GameResult {
    WHITE_WINS
    BLACK_WINS
    DRAW
}

enum TimeControl {
    CLASSICAL
    RAPID
    BLITZ
    BULLET
}
